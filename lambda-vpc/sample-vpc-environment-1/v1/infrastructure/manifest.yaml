infrastructure:
  templates:
    - rendering_engine: codebuild
      settings:
        image: aws/codebuild/standard:6.0
        runtimes:
          golang: 1.18
        env:
          variables:
            TF_VERSION: 1.3.4

        provision:
          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # get user-named proton input
          - export PROTON_ENV=$(cat proton-inputs.json | jq '.environment.name' -r)
          - export AWS_REGION=$(cat proton-inputs.json | jq '.environment.inputs.aws_region' -r)

          
          # provision, storing state in an s3 bucket using the proton environment.service.instance as the key
          - terraform init
          - terraform apply 

          # pass terraform output to proton
          - chmod +x ./output.sh && ./output.sh

        deprovision:
          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # get user-named proton input
          - export PROTON_ENV=$(cat proton-inputs.json | jq '.environment.name' -r)
          - export AWS_REGION=$(cat proton-inputs.json | jq '.environment.inputs.aws_region' -r)


          # destroy environment
          - terraform init
          - terraform destroy
